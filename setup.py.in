#!/usr/bin/env python

# setup.py.in.distutils
#
# Copyright 2012, 2013 Brandon Invergo <brandon@invergo.net>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.


from distutils.core import setup, Extension
from Cython.Build import cythonize
import platform, glob


if platform.system() == 'Linux':
    doc_dir = '@prefix@/share/doc/@PACKAGE_TARNAME@'
else:
    try:
        from win32com.shell import shellcon, shell
        homedir = shell.SHGetFolderPath(0, shellcon.CSIDL_APPDATA, 0, 0)
        appdir = '@PACKAGE_TARNAME@'
        doc_dir = os.path.join(homedir, appdir)
    except:
        pass

long_desc = \
"""
fwdpy is a C++11-based package for running forward simulations in Python
"""

setup(name='@PACKAGE_NAME@',
      version='@PACKAGE_VERSION@',
      author='Kevin R. Thornton',
      author_email='@PACKAGE_BUGREPORT@',
      maintainer='Kevin R. Thornton',
      maintainer_email='krthornt@uci.edu',
      url='http://www.molpopgen.org',
      description="forward simulation using python",
      long_description=long_desc,
      download_url='http://github.com/molpopgen/fwdpy',
      classifiers=['simulation','population genetics'],
      platforms=['Linux','OS X'],
      license='GPL >= 2',
      requires=['pandas'],
      provides=['fwdpy'],
      obsoletes=['none'],
      packages=['fwdpy'],
      py_modules=[],
      scripts=[],
      data_files=[(doc_dir, ['COPYING', 'README.rst'])],
      package_data={},
      ext_modules=cythonize(Extension("fwdpy.fwdpy",
          sources=["fwdpy/fwdpy.pyx"]+glob.glob("fwdpy/src/*.cpp")+glob.glob("include/*.hpp"), # the Cython source and additional C++ source files
          language="c++",                        # generate and compile C++ code
          include_dirs=['.','include','..'], # The -Ifwdpy is so that config.h can get included
          extra_compile_args=["-std=c++11"],  
          extra_link_args=["-std=c++11"],
          libraries=["gsl","gslcblas","tcmalloc","sequence"]),
          )
     )
